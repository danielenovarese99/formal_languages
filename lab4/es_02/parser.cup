import java_cup.runtime.*;

parser code {:
public void report_error(String message, Object info) {
StringBuffer m = new StringBuffer(message);
if (info instanceof Symbol) {
if (((Symbol)info).left != -1 && ((Symbol)info).right != -1) {
int line = (((Symbol)info).left)+1;
int column = (((Symbol)info).right)+1;
m.append(" (line "+line+", column "+column+")");
}
}
System.err.println(m);
}
:}

terminal C,OSBRACKET,CSBRACKET,OBRACKET,CBRACKET,EQ,BIGGER,SMALLER,MINUS,PLUS,DOUBLE,INT,ID,DOUBLE_TYPE,INT_TYPE,SC,DIVIDED,STAR,COND, PRINTFUNC;
non terminal program, declaration_list, declaration, type, varlist, element, construct_list, construct, assignment, function,operation_list,operation,condition,condition_construct;

start with program;

program ::= declaration_list SC construct_list
            | error SC construct_list {: System.out.println("Error in declarations section"); :}
;
declaration_list ::= declaration_list SC declaration | declaration;
declaration ::= type varlist;
type ::= DOUBLE_TYPE | INT_TYPE;
varlist ::= varlist C element | element;
element ::= ID 
    | element OSBRACKET INT CSBRACKET
    | element OSBRACKET ID CSBRACKET
    | element OSBRACKET INT error {: System.out.println("Missing close parenthesis in array access"); :}
    | element OSBRACKET ID error  {: System.out.println("Missing close parenthesis in array access"); :}
;

construct_list ::= construct_list construct | construct;
construct ::= assignment SC
            | condition_construct
            | function SC
;
assignment ::= element EQ operation_list
            | element EQ error {: System.out.println("Error in assignment"); :}
;

operation_list ::= 
            | operation_list PLUS operation
            | operation_list MINUS operation
            | operation_list STAR operation
            | operation_list DIVIDED operation
            | operation_list BIGGER operation
            | operation_list SMALLER operation
            | operation
;
operation ::= element 
            | INT
            | DOUBLE
;
condition_construct ::= COND OBRACKET operation_list CBRACKET
                    | COND error operation_list CBRACKET  {: System.out.println("Missing open parenthesis in if"); :}
                    | COND OBRACKET operation_list error {: System.out.println("Missing close parenthesis in if"); :}
;
function ::= PRINTFUNC OBRACKET varlist CBRACKET
            |PRINTFUNC OBRACKET error CBRACKET {: System.out.println("Error in print function"); :}
            |PRINTFUNC OBRACKET varlist error {: System.out.println("Error in print function"); :}
;
